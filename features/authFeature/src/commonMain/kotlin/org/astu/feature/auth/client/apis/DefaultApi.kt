/**
 * AuthService API
 * Сервис авторизации пользователей
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package org.astu.feature.auth.client.apis

import io.ktor.client.*
import io.ktor.client.call.*
import io.ktor.client.request.*
import io.ktor.http.*
import org.astu.feature.auth.client.models.UserInfoDTO
import org.astu.infrastructure.DependencyInjection.GlobalDIContext
import org.astu.infrastructure.SecurityHttpClient

class DefaultApi(private val basePath: String = "/") {
    private val client by GlobalDIContext.inject<HttpClient>()
    private val securityHttpClient by GlobalDIContext.inject<SecurityHttpClient>()
    private val securedClient = securityHttpClient.instance

    /**
     * Получение информации о текущем пользователе
     * @return UserInfo
     */
    suspend fun userInfoGet(): UserInfoDTO {
        val response = securedClient.get("${basePath}user/info") {}
        response.headers.forEach{ key, values ->
            println(key)
            println(values)
        }
        return when (response.status) {
            HttpStatusCode.OK -> response.body<UserInfoDTO>()
            else -> throw RuntimeException()
        }
    }

    /**
     * Получение информации о пользователях
     * @return List<UserInfo>
     */
    suspend fun userInfoGetAll(): List<UserInfoDTO> {
        val response = client.get("${basePath}users/info") {}
        return when (response.status) {
            HttpStatusCode.OK -> response.body<List<UserInfoDTO>>()
            else -> throw RuntimeException()
        }
    }
}

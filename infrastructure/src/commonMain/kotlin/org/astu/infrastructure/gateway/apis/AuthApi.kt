/**
 * gateway API
 * gateway API
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package org.astu.infrastructure.gateway.apis

import io.ktor.client.HttpClient
import io.ktor.client.call.body
import io.ktor.client.request.post
import io.ktor.client.request.setBody
import io.ktor.http.ContentType
import io.ktor.http.HttpStatusCode
import io.ktor.http.contentType
import org.astu.infrastructure.gateway.models.JWTLoginDTO
import org.astu.infrastructure.gateway.models.Tokens

import org.astu.infrastructure.DependencyInjection.GlobalDIContext

class AuthApi(private val basePath: String = "/") {
    private val client by GlobalDIContext.inject<HttpClient>()


    /**
     *
     * Авторизация пользователя с помощью JWT
     * @param body
     * @return Tokens
     */
    suspend fun apiAuthJwtLoginPost(body: JWTLoginDTO): Tokens {
        val response = client.post("${basePath}/api/auth/jwt/login") {
            this.contentType(ContentType.Application.Json)
            setBody(body)
        }

        return when (response.status) {
            HttpStatusCode.OK -> response.body<Tokens>()
            else -> throw RuntimeException()
        }
    }
}
